/**
 * Copyright (C) 2014 Thiago Moreira (tmoreira2020@gmail.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package br.com.thiagomoreira.liferay.plugins.notfound.services.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.TypedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the NotFound service. Represents a row in the &quot;TM_NF_NotFound&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link br.com.thiagomoreira.liferay.plugins.notfound.services.model.impl.NotFoundModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link br.com.thiagomoreira.liferay.plugins.notfound.services.model.impl.NotFoundImpl}.
 * </p>
 *
 * @author Thiago Moreira
 * @see NotFound
 * @see br.com.thiagomoreira.liferay.plugins.notfound.services.model.impl.NotFoundImpl
 * @see br.com.thiagomoreira.liferay.plugins.notfound.services.model.impl.NotFoundModelImpl
 * @generated
 */
public interface NotFoundModel extends BaseModel<NotFound>, TypedModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a not found model instance should use the {@link NotFound} interface instead.
     */

    /**
     * Returns the primary key of this not found.
     *
     * @return the primary key of this not found
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this not found.
     *
     * @param primaryKey the primary key of this not found
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the not found ID of this not found.
     *
     * @return the not found ID of this not found
     */
    public long getNotFoundId();

    /**
     * Sets the not found ID of this not found.
     *
     * @param notFoundId the not found ID of this not found
     */
    public void setNotFoundId(long notFoundId);

    /**
     * Returns the company ID of this not found.
     *
     * @return the company ID of this not found
     */
    public long getCompanyId();

    /**
     * Sets the company ID of this not found.
     *
     * @param companyId the company ID of this not found
     */
    public void setCompanyId(long companyId);

    /**
     * Returns the group ID of this not found.
     *
     * @return the group ID of this not found
     */
    public long getGroupId();

    /**
     * Sets the group ID of this not found.
     *
     * @param groupId the group ID of this not found
     */
    public void setGroupId(long groupId);

    /**
     * Returns the user ID of this not found.
     *
     * @return the user ID of this not found
     */
    public long getUserId();

    /**
     * Sets the user ID of this not found.
     *
     * @param userId the user ID of this not found
     */
    public void setUserId(long userId);

    /**
     * Returns the user uuid of this not found.
     *
     * @return the user uuid of this not found
     * @throws SystemException if a system exception occurred
     */
    public String getUserUuid() throws SystemException;

    /**
     * Sets the user uuid of this not found.
     *
     * @param userUuid the user uuid of this not found
     */
    public void setUserUuid(String userUuid);

    /**
     * Returns the create date of this not found.
     *
     * @return the create date of this not found
     */
    public Date getCreateDate();

    /**
     * Sets the create date of this not found.
     *
     * @param createDate the create date of this not found
     */
    public void setCreateDate(Date createDate);

    /**
     * Returns the fully qualified class name of this not found.
     *
     * @return the fully qualified class name of this not found
     */
    @Override
    public String getClassName();

    public void setClassName(String className);

    /**
     * Returns the class name ID of this not found.
     *
     * @return the class name ID of this not found
     */
    @Override
    public long getClassNameId();

    /**
     * Sets the class name ID of this not found.
     *
     * @param classNameId the class name ID of this not found
     */
    @Override
    public void setClassNameId(long classNameId);

    /**
     * Returns the keywords of this not found.
     *
     * @return the keywords of this not found
     */
    @AutoEscape
    public String getKeywords();

    /**
     * Sets the keywords of this not found.
     *
     * @param keywords the keywords of this not found
     */
    public void setKeywords(String keywords);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(NotFound notFound);

    @Override
    public int hashCode();

    @Override
    public CacheModel<NotFound> toCacheModel();

    @Override
    public NotFound toEscapedModel();

    @Override
    public NotFound toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
